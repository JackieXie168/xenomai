moduledir = $(DESTDIR)@XENO_MODULE_DIR@
includedir = $(prefix)/include/vxworks

modext = @XENO_MODULE_EXT@

CROSS_COMPILE = @CROSS_COMPILE@

libmodule_SRC = \
	errnoLib.c \
	intLib.c \
	kernelLib.c \
	module.c \
	msgQLib.c \
	semLib.c \
	sysLib.c \
	taskHookLib.c \
	taskInfo.c \
	taskLib.c \
	tickLib.c \
	wdLib.c

HEADER_SYMLINKS = \
	errnoLib.h \
	intLib.h \
	kernelLib.h \
	msgQLib.h \
	semLib.h \
	sysLib.h \
	taskHookLib.h \
	taskInfo.h \
	taskLib.h \
	tickLib.h \
	wdLib.h

include_HEADERS = \
	vxworks.h

noinst_HEADERS = \
	defs.h

xeno_vxworks$(modext): @XENO_KBUILD_ENV@
xeno_vxworks$(modext): $(libmodule_SRC) FORCE
	@XENO_KBUILD_CMD@ xeno_extradef="@XENO_KMOD_CFLAGS@"

clean-local:
	@XENO_KBUILD_CLEAN@

distclean-local:
	@XENO_KBUILD_DISTCLEAN@

all-local: xeno_vxworks$(modext)
if CONFIG_XENO_OLD_FASHIONED_BUILD
	$(mkinstalldirs) $(top_srcdir)/modules
	$(INSTALL_DATA) $^ $(top_srcdir)/modules
endif

install-exec-local: xeno_vxworks$(modext)
	$(mkinstalldirs) $(moduledir) $(DESTDIR)$(includedir)
	$(INSTALL_DATA) $< $(moduledir)
	for f in $(HEADER_SYMLINKS); do \
		$(LN_S) -f vxworks.h $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-local:
	$(RM) $(moduledir)/xeno_vxworks$(modext)
	for f in $(HEADER_SYMLINKS); do \
		$(RM) $(DESTDIR)$(includedir)/$$f; \
	done

if CONFIG_XENO_OPT_UVM

lib_LIBRARIES = libvxworks.a

nodist_libvxworks_a_SOURCES = \
	errnoLib.c \
	intLib.c \
	kernelLib.c \
	module.c \
	msgQLib.c \
	semLib.c \
	sysLib.c \
	taskHookLib.c \
	taskInfo.c \
	taskLib.c \
	tickLib.c \
	wdLib.c

libvxworks_a_CPPFLAGS = \
	@XENO_USER_CFLAGS@ -D__XENO_UVM__ \
	-I$(srcdir)/.. \
	-I$(top_srcdir)/include \
	-I../../include \
	-I@XENO_LINUX_DIR@/include

libvxworks_a_AR = $(CROSS_COMPILE)ar cru

endif

.PHONY: FORCE

EXTRA_DIST = $(libmodule_SRC) doc Makefile Kconfig demos
